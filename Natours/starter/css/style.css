/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Basic reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: 0;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 131, 0.8)
    ),
    url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /* This is the relative of where the top/bottom is taken from below */
  position: relative;
  /* 0 0 = we don't want it to move on the x or y axis, 100% = we want it to be 100% of the width of the element, 100%, 50% = 100% x and 200px y, 0 100% = back to the start and 100% y (height) again. */
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.text-box {
  position: absolute;
  /* Top and bottom are relative to the parent element */
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 60px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation-name: move-in-left;
  animation-duration: 3s;
  animation-timing-function: ease-out;
  /* animation-iteration-count: 3; */
  /* animation-delay: 3s; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation-name: move-in-right;
  animation-duration: 3s;
  animation-timing-function: ease-out;
}

@keyframes move-in-left {
  /* Start - Initial State */
  0% {
    opacity: 0;
    /* X because we're going left to right */
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  /* End - Final State */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes move-in-right {
  /* Start - Initial State */
  0% {
    opacity: 0;
    /* X because we're going left to right */
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  /* End - Final State */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes move-in-bottom {
  /* Start - Initial State */
  0% {
    opacity: 0;
    /* X because we're going left to right */
    transform: translateY(200px);
  }

  /* End - Final State */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* Pseudo class for link - style elements under a special condition  */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  /* Gives element it's own space */
  display: inline-block;
  border-radius: 100px;
  /* all transitions short-hand, this also applies this transition to the hover and the active below the transition state must be on the initial state */
  transition: all 0.2s;
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  /* offset in the x direction, offset in the y direction, blur, color and transparency */
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
}

.btn-white {
  background-color: #fff;
  color: #777;
  padding: 15px 40px;
}

.btn::after {
  /* When you pseudo after, we MUST specify content & display */
  content: "";
  display: inline-block;
  /* This is 100% of the width of the already specified btn */
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn-white::after {
  background-color: #fff;
}

/* pseudo after only when the button is hovered */
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  /* Fade out, it's going to opacity 0 */
  opacity: 0;
}

.btn-animated {
  animation: move-in-bottom 3s ease-out 0.75s;
  /* Automatically applies the 0% keyframe before the animation begins */
  animation-fill-mode: backwards;
}
